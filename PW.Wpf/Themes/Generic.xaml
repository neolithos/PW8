<!--
Licensed under the EUPL, Version 1.1 or - as soon they will be approved by the
European Commission - subsequent versions of the EUPL(the "Licence"); You may
not use this work except in compliance with the Licence.

You may obtain a copy of the Licence at:
http://ec.europa.eu/idabc/eupl

Unless required by applicable law or agreed to in writing, software distributed
under the Licence is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR
CONDITIONS OF ANY KIND, either express or implied. See the Licence for the
specific language governing permissions and limitations under the Licence.
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ui="clr-namespace:Neo.PerfectWorking.UI">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="pack://application:,,,/PW.Wpf;component/Themes/GenericTheme.xaml" />
		<ResourceDictionary Source="pack://application:,,,/PW.Wpf;component/Themes/CommonIcons.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<ui:NotBooleanConverter x:Key="NotBooleanConverter" />

	<ControlTemplate x:Key="TextBoxTemplate" TargetType="{x:Type TextBox}">
		<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
			<ScrollViewer x:Name="PART_ContentHost" Grid.Column="0" Focusable="True" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" TargetName="border" Value="0.56"/>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource BorderHighlightBrush}"/>
			</Trigger>
			<Trigger Property="IsKeyboardFocused" Value="True">
				<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource BorderHighlightBrush}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="PwTextBox"  TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
		<Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Background" Value="{DynamicResource ContentBackgroundBrush}" />
		<Setter Property="Height" Value="20" />
		<Setter Property="Template" Value="{StaticResource TextBoxTemplate}" />
	</Style>

	<Style x:Key="TextBoxButton" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="{DynamicResource ContentForegroundBrush}"/>
		<Setter Property="TextElement.Foreground" Value="{DynamicResource ContentForegroundBrush}" />
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="2"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="border" 
							BorderThickness="0" 
							BorderBrush="{DynamicResource BorderHighlightBrush}"
							Background="{TemplateBinding Background}" 
							SnapsToDevicePixels="true">
						<ContentPresenter x:Name="contentPresenter" 
										  Focusable="False" 
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
										  Margin="{TemplateBinding Padding}" 
										  RecognizesAccessKey="True" 
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource SelectionBrush}"/>
							<Setter Property="BorderThickness" TargetName="border" Value="1,0,0,0" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource BorderHighlightBrush}"/>
							<Setter Property="BorderThickness" TargetName="border" Value="1,0,0,0" />
							<Setter Property="Padding" Value="3,3,1,1" />
							<Setter Property="TextElement.Foreground" Value="{DynamicResource ContentBackgroundBrush}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="TextElement.Foreground" Value="{DynamicResource ContentGrayBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<ControlTemplate x:Key="PwTextBoxCommandTemplate" TargetType="{x:Type ui:PwTextBoxCommand}">
		<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<ScrollViewer x:Name="PART_ContentHost" Grid.Column="0" Focusable="True" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
				<Button Grid.Column="1" Width="20" Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}" Content="{TemplateBinding CommandContent}" ContentTemplate="{TemplateBinding CommandContentTemplate}" ContentTemplateSelector="{TemplateBinding CommandContentTemplateSelector}" ContentStringFormat="{TemplateBinding CommandContentStringFormat}" Style="{StaticResource TextBoxButton}" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" TargetName="border" Value="0.56"/>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource BorderHighlightBrush}"/>
			</Trigger>
			<Trigger Property="IsKeyboardFocused" Value="True">
				<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource BorderHighlightBrush}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	
	<Style TargetType="{x:Type ui:PwTextBoxCommand}" BasedOn="{StaticResource {x:Type TextBox}}">
		<Setter Property="Template" Value="{StaticResource PwTextBoxCommandTemplate}"/>
	</Style>

	<ControlTemplate x:Key="PwPasswordBoxTemplate" TargetType="{x:Type ui:PwPasswordBox}">
		<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<PasswordBox x:Name="PART_PasswordBox" Grid.Column="0" Focusable="True" BorderThickness="0" Visibility="Visible" Margin="{TemplateBinding Padding}"
							 IsEnabled="{TemplateBinding IsReadOnly,Converter={StaticResource NotBooleanConverter}}"
							 Background="{TemplateBinding Background}" />
				<TextBlock x:Name="PART_VisibleBox" Grid.Column="0" Visibility="Hidden" Margin="{TemplateBinding Padding}" Padding="1,0"
						   Background="{TemplateBinding Background}" />
				<Button x:Name="PART_Button" Grid.Column="1" Width="20" Style="{StaticResource TextBoxButton}" IsEnabled="{TemplateBinding HasPassword}">
					<Button.Content>
						<ContentControl Template="{StaticResource EyeImage}" />
					</Button.Content>
				</Button>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger SourceName="PART_Button" Property="IsPressed" Value="True">
				<Setter Property="Visibility" TargetName="PART_VisibleBox" Value="Visible" />
				<Setter Property="Visibility" TargetName="PART_PasswordBox" Value="Hidden" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" TargetName="border" Value="0.56"/>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource BorderHighlightBrush}"/>
			</Trigger>
			<Trigger Property="IsKeyboardFocusWithin" SourceName="PART_PasswordBox" Value="True">
				<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource BorderHighlightBrush}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style TargetType="{x:Type ui:PwPasswordBox}">
		<Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Background" Value="{DynamicResource ContentBackgroundBrush}" />
		<Setter Property="Padding" Value="1" />
		<Setter Property="Height" Value="20" />
		<Setter Property="Template" Value="{StaticResource PwPasswordBoxTemplate}" />
		<Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
	</Style>

	<Style TargetType="{x:Type ui:PwProgressCircle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ui:PwProgressCircle}" >
                    <Grid>
                        <TextBlock FontSize="20" Text="{TemplateBinding ProgressText}" Visibility="{TemplateBinding ProgressTextVisible}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ui:PwSearchListBox}">
        <Setter Property="Padding" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ui:PwSearchListBox}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <ScrollViewer Grid.Row="0" x:Name="PART_Items" Focusable="False">
                            <ItemsPresenter />
                        </ScrollViewer>

                        <TextBox Grid.Row="1" x:Name="PART_TextBox" Text="{Binding Path=CurrentFilter,RelativeSource={RelativeSource TemplatedParent},Delay=300,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}">
                                    <Setter Property="BorderThickness" Value="0,0,0,1" />
                                    <Setter Property="Margin" Value="0,6,0,0" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type TextBox}">
                                                <Border x:Name="RootElement" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Opacity="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                                                    <Grid>
                                                        <ScrollViewer x:Name="PART_ContentHost" Padding="{TemplateBinding Padding}" BorderThickness="0" IsTabStop="False"/>
                                                    </Grid>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ui:PwPopupContent}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="12" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ui:PwPopupContent}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="0">
                        <ContentPresenter
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
							  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                              Cursor="{TemplateBinding Cursor}"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<DataTemplate x:Key="PaneProgressTemplate">
		<Grid>
			<Border Background="{x:Static SystemColors.WindowBrush}" Opacity="0.8" />
			<StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
				<ui:PwProgressCircle IsIndeterminate="True" Height="48" Width="48" NumberOfPoints="16" TailPoints="12" TailSpeed="00:00:00.100" />
				<TextBlock Text="{Binding Label}" />
			</StackPanel>
		</Grid>
	</DataTemplate>
	
	<Style TargetType="{x:Type ui:PwContentPane}">
		<Setter Property="Padding" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ui:PwContentPane}">
					<Grid>
						<ContentPresenter Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
										  ContentStringFormat="{TemplateBinding ContentStringFormat}"
										  IsEnabled="{TemplateBinding IsProgressActive,Converter={x:Static ui:PwConverter.NotBoolean}}" />
						<ContentPresenter Visibility="{TemplateBinding IsProgressActive, Converter={x:Static ui:PwConverter.BooleanToVisible}}" Content="{TemplateBinding CurrentProgress}" ContentTemplate="{StaticResource PaneProgressTemplate}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type ui:PwNavigationPane}" BasedOn="{StaticResource {x:Type ui:PwContentPane}}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ui:PwNavigationPane}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>
						<ContentPresenter Grid.Column="0"
										  Content="{TemplateBinding Header}" 
										  ContentTemplate="{TemplateBinding HeaderTemplate}"
										  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
										  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
										  IsEnabled="{TemplateBinding IsProgressActive,Converter={x:Static ui:PwConverter.NotBoolean}}"
										  Visibility="{TemplateBinding HasHeader,Converter={x:Static ui:PwConverter.BooleanToCollapsed}}" />
						<ContentPresenter Grid.Column="1"
										  Content="{Binding CurrentContentControl.Content,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
										  ContentTemplate="{Binding CurrentContentControl.ContentTemplate,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
										  ContentTemplateSelector="{Binding CurrentContentControl.ContentTemplateSelector,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
										  ContentStringFormat="{Binding CurrentContentControl.ContentStringFormat,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
										  IsEnabled="{TemplateBinding IsProgressActive,Converter={x:Static ui:PwConverter.NotBoolean}}" />
						<ContentPresenter Grid.Column="0" Grid.ColumnSpan="2" Visibility="{TemplateBinding IsProgressActive, Converter={x:Static ui:PwConverter.BooleanToVisible}}" Content="{TemplateBinding CurrentProgress}" ContentTemplate="{StaticResource PaneProgressTemplate}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
